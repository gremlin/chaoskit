//
// Iterate through breakpoints to allow for viewport specific styles
// @param  {string} $selector
// @param  {string} $queries: $global-queries
// @return {mixed}
//
@mixin grid-breakpoints($selector, $queries: $global-queries) {
  // Default prop
  #{$selector} {
    @content;
  }
  // Size modifiers
  @each $size in $global-breakpoint-sizes {
    #{$selector}#{$breakpoint-delimiter}#{$size} {
      @include queries($size, $global-queries) {
        @content;
      }
    }
  }
}

//
// Generates both selector and placeholder equivalent
// @param  {string} $selector
//
@mixin selector-placeholder($selector) {
  #{$selector},
  %#{str-replace($selector, '.')} {
    @content;
  }
}

//
// Reusable screen-reader only utility
//
@mixin u-srOnly() {
  border: 0 !important;
  clip: rect(1px, 1px, 1px, 1px);
  height: 1px !important;
  overflow: hidden;
  padding: 0 !important;
  position: absolute !important;
  width: 1px !important;
}

//
// Trim children
//
@mixin trimChildren() {
  * {
    &:last-child {
      margin-bottom: 0;
    }

    > * {
      &:last-child {
        margin-bottom: 0;
      }
    }
  }
}

// Slightly lighten a color
// @access public
// @param {Color} $color - color to tint
// @param {Number} $percentage - percentage of `$color` in returned color
// @return {Color}
@function tint($color, $percentage) {
  @return mix(white, $color, $percentage);
}

// Slightly darken a color
// @access public
// @param {Color} $color - color to shade
// @param {Number} $percentage - percentage of `$color` in returned color
// @return {Color}
@function shade($color, $percentage) {
  @return mix(black, $color, $percentage);
}

//- Mixin: Fluid Type
///
/// Magic calc + vh to allow text to be fluid between minimum
/// and maximum breakpoints.
///
/// @group typography
/// @param {variable} $min-font-size [12px] - Minimum font size
/// @param {variable} $max-font-size [24px] - Maximum font size
/// @param {variable} $lower-range [420px] - Stop scaling font smaller at this screen resolution
/// @param {variable} $upper-range [900px] - Stop scaling font larger at this screen resolution
/// @example
///   h1 {
///     @include responsive-type(20px, 48px);
///   }
/// @site https://madebymike.com.au/writing/precise-control-responsive-typography/

@mixin fluid-type(
  $min-font-size: 12px,
  $max-font-size: 21px,
  $lower-range: 480px,
  $upper-range: 960px
) {
  font-size:
    calc(
      #{$min-font-size} + #{(
        ($max-font-size / ($max-font-size * 0 + 1)) -
        ($min-font-size / ($min-font-size * 0 + 1))
      )} * ((100vw - #{$lower-range}) / #{(
        ($upper-range / ($upper-range * 0 + 1)) -
        ($lower-range / ($lower-range * 0 + 1))
      )})
    );

  @media (max-width: $lower-range) {
    font-size: $min-font-size !important;
  }

  @media (min-width: $upper-range) {
    font-size: $max-font-size !important;
  }
}

// Target all "main" headings like a normal selector
h1,
h2,
h3 {
  @extend %headings !optional;
}
