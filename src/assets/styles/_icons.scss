//
// Variables
//

$icon-size: 1em !default;
$icon-size-small: 0.65em !default;
$icon-size-large: 1.5em !default;
$icon-size-xlarge: 3em !default;
$icon-stroke-width-thin: 1.25 !default;
$icon-stroke-width: 1.5 !default;
$icon-fill-opacity: 0.1 !default;
$icon-vector-effect: non-scaling-stroke !default; // Can turn off with `default`

//
// Component
//

@mixin icon() {
  // 1. Help against rendering bug when scaling
  .icon {
    size: $icon-size;
    line-height: 1;
    position: relative;
    top: -0.1em;
    max-width: 100%;
    backface-visibility: hidden; // 1

    .icon-fill {
      fill: currentColor;
    }

    &-stroke {
      stroke: currentColor;
      stroke-width: $icon-stroke-width;
      vector-effect: $icon-vector-effect;

      * {
        vector-effect: $icon-vector-effect;
      }
    }

    &--small {
      size: $icon-size-small;
    }

    &--large {
      size: $icon-size-large;
    }

    &--xlarge {
      size: $icon-size-xlarge;
    }

    @if (mixin-exists(hook-icon)) {
      @include hook-icon();
    }
  }

  // Workaround for browsers not supporting `vector-effect: non-scaling-stroke`
  .no-vectorEffect-support {
    .icon {
      stroke-width: $icon-stroke-width-thin;
    }
  }

  @if (mixin-exists(hook-icon-misc)) {
    @include hook-icon-misc();
  }
}
